#include "utils.h"



int main()
{
	//TrainCodebook();

	//generateTMatrix();

	//databaseSave();

	test();

	return 0;
}

/***********************************

首先聚类，100类， 100 * 128；生成投影矩阵 P，64*128
然后对每一类找大量的属于该类的描述子，比如m个，构成一个128*m的矩阵，
用该P 乘以 这个矩阵，即 （64*128）* （128*m） = (64 * m)
然后对这个（64*m）的矩阵求每一行的中值，这些中值构成一个 64*1的中值向量,
每个类对应一个中值向量，有100个类，那么构成一个中值矩阵T 100 * 64 ，进行了转置

有了码本，P，T，然后就可对每个sift进行转换了

对一个sift，用P乘以它， 即 64*128 * （128*1） = （64*1）
该sift还对应一个类，同时也对应一个中值向量
然后将这个 64 *1 与对应的中值向量64*1进行比较，逐个元素的比较，如果大于，则该sift的HE特征的改为置为1，小于则为0
最终，每个sift可以转换为 一个最近的类标号 和 一个64 bit的HE特征；
一幅图片有多个sift






************************************/